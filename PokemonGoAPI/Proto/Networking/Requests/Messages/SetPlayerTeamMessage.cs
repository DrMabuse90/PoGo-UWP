// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SetPlayerTeamMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Networking.Requests.Messages {

  /// <summary>Holder for reflection information generated from SetPlayerTeamMessage.proto</summary>
  public static partial class SetPlayerTeamMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for SetPlayerTeamMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SetPlayerTeamMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpTZXRQbGF5ZXJUZWFtTWVzc2FnZS5wcm90bxInUE9HT1Byb3Rvcy5OZXR3",
            "b3JraW5nLlJlcXVlc3RzLk1lc3NhZ2VzGiBQT0dPUHJvdG9zL0VudW1zL1Rl",
            "YW1Db2xvci5wcm90byJBChRTZXRQbGF5ZXJUZWFtTWVzc2FnZRIpCgR0ZWFt",
            "GAEgASgOMhsuUE9HT1Byb3Rvcy5FbnVtcy5UZWFtQ29sb3JiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Enums.TeamColorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage), global::POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessage.Parser, new[]{ "Team" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SetPlayerTeamMessage : pb::IMessage<SetPlayerTeamMessage> {
    private static readonly pb::MessageParser<SetPlayerTeamMessage> _parser = new pb::MessageParser<SetPlayerTeamMessage>(() => new SetPlayerTeamMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetPlayerTeamMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Networking.Requests.Messages.SetPlayerTeamMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamMessage(SetPlayerTeamMessage other) : this() {
      team_ = other.team_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetPlayerTeamMessage Clone() {
      return new SetPlayerTeamMessage(this);
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 1;
    private global::POGOProtos.Enums.TeamColor team_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.TeamColor Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetPlayerTeamMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetPlayerTeamMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Team != other.Team) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Team != 0) hash ^= Team.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Team != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Team);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Team != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Team);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetPlayerTeamMessage other) {
      if (other == null) {
        return;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            team_ = (global::POGOProtos.Enums.TeamColor) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
